@model IEnumerable<Teacher>

@{
    ViewData["Title"] = "Prowadzący";
}

<h1>Prowadzący:</h1>

<p>
    <a asp-action="Create" class="mr-5" authorization="true">Dodaj prowadzącego</a>
    <a asp-action="Search" >Wyszukaj prowadzącego</a>
</p>

@{ await Html.RenderPartialAsync("_StatusMessage"); }

@if (Model.Count() > 0)
{
    <table class="table">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Title)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.FirstName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.LastName)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.ORCID)
                </th>
                <th  authorization-policy="RequireAdmin">
                    Zarządzaj
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
            <tr>
                <td>
                    @Html.DisplayFor(modelItem => item.Title)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.FirstName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.LastName)
                </td>
                <td>
                    @Html.DisplayFor(modelItem => item.ORCID)
                </td>
                <td authorization-policy="RequireAdmin">
                    <a asp-action="Edit" asp-route-id="@item.Id">Edytuj</a>
                    <a asp-action="Delete" asp-route-id="@item.Id" class="ml-2">Usuń</a>
                </td>
            </tr>
            }
        </tbody>
    </table>
}
else
{
    <b class="mt-5">Brak dodanych prowadzących.</b>
}